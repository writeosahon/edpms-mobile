{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 26/7/2018.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * property holds the Map objects which will contain a reference to dynamically loaded ES modules.\r\n     * NOTE: modules MUST BE deleted from this property i.e. the Map object when no longer need.\r\n     * This is to enable garbage collection and prevent memory leaks.\r\n     * NOTE: the keys used within the map will be identical to the same map value used in the SystemJS.config()\r\n     */\r\n    LOADED_MODULES: new Map(),\r\n    /**\r\n     * method contains the stratup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n\r\n            if(window.localStorage.getItem(\"utopiasoftware-edpms-reload-app\") &&\r\n                window.localStorage.getItem(\"utopiasoftware-edpms-reload-app\") !== \"\"){\r\n\r\n                await new Promise(function(resolve, reject){setTimeout(resolve, 200);});\r\n                // open the side menu\r\n                await $('ons-splitter').get(0).right.open();\r\n                $('#determinate-progress-modal .modal-message').html('Prepping Evaluation Report for Upload...');\r\n                await $('#determinate-progress-modal').get(0).show();\r\n                $('#determinate-progress-modal #determinate-progress').get(0).value = 1;\r\n                // flag to the app that you are going back to a page that needs to be refreshed\r\n                window.sessionStorage.setItem(\"utopiasoftware-edpms-refresh-page\", \"yes\");\r\n                utopiasoftware[utopiasoftware_app_namespace].model.userDetails =\r\n                    JSON.parse(window.localStorage.getItem(\"utopiasoftware-edpms-user-details\"));\r\n\r\n                // load the app main page\r\n                await $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n\r\n                // move back to the project search page\r\n                //await $('#app-main-navigator').get(0).resetToPage(\"search-project-page.html\");\r\n\r\n            }\r\n            else{\r\n                navigator.splashscreen.show(); // show the splashscreen\r\n                // displaying prepping message\r\n                $('#loader-modal-message').html(\"Loading App...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n\r\n\r\n                if(window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") &&\r\n                    window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") !== \"\"){ // there is a previous logged in user\r\n                    // load the app main page\r\n                    $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n                }\r\n                else{ // there is no previously logged in user\r\n                    // load the login page\r\n                    $('ons-splitter').get(0).content.load(\"login-template\");\r\n                }\r\n            }\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // prepare the inapp browser plugin by removing the default window.open() functionality\r\n                delete window.open;\r\n\r\n                // note: for most promises, we will use async-wait syntax\r\n\r\n                // create the pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase = new PouchDB('ptrackerdatabase.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // generate a password for encrypting the app database (if it does NOT already exist)\r\n                if(!window.localStorage.getItem(\"utopiasoftware-edpms-rid\") ||\r\n                    window.localStorage.getItem(\"utopiasoftware-edpms-rid\") === \"\") {\r\n                    window.localStorage.setItem(\"utopiasoftware-edpms-rid\",\r\n                        Random.uuid4(Random.engines.browserCrypto));\r\n                }\r\n                await new Promise(function(resolve, reject){\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                    crypto(window.localStorage.getItem(\"utopiasoftware-edpms-rid\"), {ignore: '_attachments',\r\n                        cb: function(err, key){\r\n                        if(err){ // there is an error\r\n                            reject(err); // reject Promise\r\n                        }\r\n                        else{ // no error\r\n                            resolve(key); // resolve Promise\r\n                        }\r\n                    }});\r\n                });\r\n\r\n                // create the database indexes used by the app\r\n                await Promise.all([utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.createIndex({\r\n                    index: {\r\n                        fields: ['TYPE'],\r\n                        name: 'DOC_TYPE_INDEX',\r\n                        ddoc: 'ptracker-index-designdoc'\r\n                    }}),\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.createIndex({\r\n                        index: {\r\n                            fields: ['PROJECTID', 'TYPE'],\r\n                            name: 'FIND_PROJECT_BY_ID_INDEX',\r\n                            ddoc: 'ptracker-index-designdoc'\r\n                        }\r\n                    }),\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.createIndex({\r\n                        index: {\r\n                            fields: ['BOQID'],\r\n                            name: 'FIND_BOQ_BY_ID_INDEX',\r\n                            ddoc: 'ptracker-index-designdoc'\r\n                        }\r\n                    }),\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.createIndex({\r\n                        index: {\r\n                            fields: ['TYPE', 'evaluatedBy'],\r\n                            name: 'FIND_SAVED_REPORT_BY_EVALUATED_BY',\r\n                            ddoc: 'ptracker-index-designdoc'\r\n                        }\r\n                    })]);\r\n\r\n                // create the view required view queries for the app database\r\n                try{\r\n                    await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.put({\r\n                        _id: '_design/saved_reports_view',\r\n                        views: {\r\n                            get_report_evaluated_by: {\r\n                                map: function (doc) {\r\n                                    if(doc.TYPE === \"saved report\"){\r\n                                        emit([doc.TYPE, doc.evaluatedBy, doc.dateStamp], doc._id);\r\n                                    }\r\n                                }.toString()\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch(error){}\r\n\r\n\r\n                if(window.localStorage.getItem(\"utopiasoftware-edpms-reload-app\") &&\r\n                    window.localStorage.getItem(\"utopiasoftware-edpms-reload-app\") !== \"\"){\r\n\r\n                    window.localStorage.removeItem(\"utopiasoftware-edpms-reload-app\");\r\n                    window.localStorage.removeItem(\"utopiasoftware-edpms-user-details\");\r\n                    //$('#app-main-navigator').get(0).resetToPage(\"search-project-page.html\", {pop: true});\r\n                    // call the side menu click button\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.sideMenuPageViewModel.uploadReportsButtonClicked();\r\n                }\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"APP LOADING ERROR\", err);\r\n            }\r\n            finally{\r\n                 // set status bar color\r\n                 StatusBar.backgroundColorByHexString(\"#00B2A0\");\r\n                 navigator.splashscreen.hide(); // hide the splashscreen\r\n                 utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fullyt loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the SIDE MENU page\r\n     */\r\n    sideMenuPageViewModel: {\r\n\r\n        /**\r\n         * method is triggered when the \"Sign Out\" button is clicked\r\n         * @returns {Promise<void>}\r\n         */\r\n        async signOutButtonClicked(){\r\n            console.log(\"STACKS\", $('#app-main-navigator').get(0).pages);\r\n            // remove the user details rev id from storage\r\n            window.localStorage.removeItem(\"utopiasoftware-edpms-app-status\");\r\n            // load the login page\r\n            await $('ons-splitter').get(0).content.load(\"login-template\");\r\n            // hide the side menu\r\n            $('ons-splitter').get(0).right.close();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Upload Reports\" button is clicked\r\n         *\r\n         * @param reloadApp {Boolean} flag whether triggering this method should also lead to an app reload\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async uploadReportsButtonClicked(reloadApp = false){\r\n            // upload all the report evaluation sheets\r\n            var totalUploads = 0;\r\n\r\n            try{\r\n\r\n                if(reloadApp === true){\r\n                    // set the flag to reload the app\r\n                    window.localStorage.setItem(\"utopiasoftware-edpms-reload-app\", \"search-project-page.html\");\r\n                    window.localStorage.setItem(\"utopiasoftware-edpms-user-details\",\r\n                        JSON.stringify(utopiasoftware[utopiasoftware_app_namespace].model.userDetails));\r\n\r\n                    /*navigator.app.exitApp(); // Close the app\r\n                    // restart the app\r\n                    startApp.set({\r\n                        action: \"ACTION_VIEW\",\r\n                        uri: \"edpms://\"\r\n                    }, {\"UTOPIASOFTWARE_EDPMS_RELOAD-APP\": \"search-project-page.html\",\r\n                            \"UTOPIASOFTWARE_EDPMS_USER_DETAILS\":\r\n                    JSON.stringify(utopiasoftware[utopiasoftware_app_namespace].model.userDetails)}).start();*/\r\n\r\n                    await new Promise(function(resolve, reject){\r\n                       window.setTimeout(resolve, 0);\r\n                    });\r\n\r\n                    cordova.plugins.diagnostic.restart(function(){}, false);\r\n\r\n                    return;\r\n                }\r\n\r\n                totalUploads = await utopiasoftware[utopiasoftware_app_namespace].projectEvaluationReportData.\r\n                uploadProjectEvaluationReports(true);\r\n                console.log(\"TOTAL UPLOADS\", totalUploads);\r\n                if(totalUploads === 0) // no reports were uploaded.\r\n                {\r\n                    await ons.notification.alert('No evaluation reports to upload',\r\n                        {title: '<ons-icon icon=\"md-info\" style=\"color: #3f51b5\" size=\"33px\"></ons-icon> <span style=\"color: #3f51b5; display: inline-block; margin-left: 1em;\">No Reports Uploaded</span>',\r\n                            buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n                }\r\n                else{\r\n                    // inform user that all evaluation reports have been uploaded\r\n                    await ons.notification.alert(`All evaluation reports successfully uploaded. ${totalUploads} in total`,\r\n                        {title: '<ons-icon icon=\"fa-check\" style=\"color: #00B2A0; transform: scale(0.6)\" size=\"28px\"></ons-icon> <span style=\"color: #00B2A0; display: inline-block; margin-left: 1em;\">Uploaded Reports</span>',\r\n                            buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n                }\r\n            }\r\n            catch(err){\r\n                ons.notification.alert(`uploading evaluation reports failed. Please try again. ${err.message || \"\"}`, {title: '<span style=\"color: red\">Uploading Reports Failed</span>',\r\n                    buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"View Reports\" button is clicked\r\n         * @returns {Promise<void>}\r\n         */\r\n        async viewReportsButtonClicked(){\r\n\r\n            // push the \"View Reports\" page to view\r\n            await $(\"#app-main-navigator\").get(0).bringPageTop(\"view-reports-page.html\", {animation: \"slide\"});\r\n            // hide the side menu\r\n            $('ons-splitter').get(0).right.close();\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * this is the view-model/controller for the LOGIN page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                        buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // adjust the window/view-port settings for when the soft keyboard is displayed\r\n                //window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n                window.SoftInputMode.set('adjustResize');\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator =\r\n                    $('#login-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustResize'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n\r\n            // listen for when the device keyboard is hidden\r\n            window.addEventListener(\"keyboardDidHide\", utopiasoftware[utopiasoftware_app_namespace].\r\n                controller.loginPageViewModel.keyboardHidden);\r\n\r\n            // listen for when the device keyboard is shown\r\n            window.addEventListener(\"keyboardDidShow\", utopiasoftware[utopiasoftware_app_namespace].\r\n                controller.loginPageViewModel.keyboardShown);\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n\r\n            try {\r\n                // remove the listeners registered to listen for when the device keyboard is hidden and shown\r\n                window.removeEventListener(\"keyboardDidHide\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.loginPageViewModel.keyboardHidden);\r\n                window.removeEventListener(\"keyboardDidShow\", utopiasoftware[utopiasoftware_app_namespace].\r\n                    controller.loginPageViewModel.keyboardShown);\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method will be triggered when the device keyboard is hidden. This is an event listener\r\n         */\r\n        keyboardHidden(){\r\n            // show the title banner on the home page\r\n            $('#login-page .login-title-banner').css(\"display\", \"block\");\r\n        },\r\n\r\n        /**\r\n         * method will be triggered when the device keyboard is shown. This is an event listener\r\n         */\r\n        keyboardShown(){\r\n            // hide the title banner on the home page\r\n            $('#login-page .login-title-banner').css(\"display\", \"none\");\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Sign In / Log In\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loginButtonClicked(){\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the enter button is clicked on the device keyboard\r\n         *\r\n         * @param keyEvent\r\n         * @returns {Promise<void>}\r\n         */\r\n        async enterButtonClicked(keyEvent){\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // prevent the default action from occurring\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n                // hide the device keyboard\r\n                Keyboard.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async formValidated(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"You cannot sign in without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // inform user that login validation is taking place\r\n            $('#loader-modal #loader-modal-message').html(\"Signing You In...\");\r\n            await $('#loader-modal').get(0).show();\r\n\r\n            try{\r\n                // create the form data to be submitted\r\n                let formData = {\r\n                    username: $('#login-page #login-email').val().trim(),\r\n                    password: $('#login-page #login-password').val().trim()\r\n                };\r\n\r\n                let serverResponse = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/mobile/login.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-PTRACKER-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: formData\r\n                    }\r\n                ));\r\n                // convert the response to an object\r\n                serverResponse = JSON.parse(serverResponse.trim());\r\n\r\n                // check if the user login was successful\r\n                if(serverResponse.status !== \"success\"){ // user log was NOT successful\r\n                    throw serverResponse; // throw error\r\n                }\r\n\r\n                // save the user's details\r\n                utopiasoftware[utopiasoftware_app_namespace].model.userDetails = {\r\n                    _id: \"userDetails\",\r\n                    userDetails: {firstname: serverResponse.firstname, username: serverResponse.username},\r\n                    type: \"userDetails\",\r\n                    _rev: (window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") &&\r\n                        window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") !== \"\") ?\r\n                        window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") : null\r\n                };\r\n\r\n                // check if the user wants to remain signed in\r\n                if($('#login-page #login-remember-me').get(0).checked){ // the user wants to remian signed in\r\n                    // save the user's details to persistent database\r\n                    let userDetailsDoc = null; // holds the previous stored user details from the database\r\n                    try{\r\n                        // check if a user details object has been previously saved in app database\r\n                        userDetailsDoc = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.get('userDetails');\r\n                    }catch(error){}\r\n\r\n                    if(!userDetailsDoc){ // no userDetails object has been previous saved\r\n                        delete utopiasoftware[utopiasoftware_app_namespace].model.userDetails._rev; // delete the _rev property\r\n                    }\r\n                    else{ // user details object has been previously saved\r\n                        // update the _rev property of the userDetails object being used by the app\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.userDetails._rev = userDetailsDoc._rev;\r\n                    }\r\n\r\n                    // saved the user details object in the app database\r\n                    let databaseResponse = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.put(\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.userDetails);\r\n                    // save the returned user details rev id\r\n                    window.localStorage.setItem(\"utopiasoftware-edpms-app-status\", databaseResponse.rev);\r\n                }\r\n                else{ // user does not want to remain signed in\r\n                    // remove the user details rev id from storage\r\n                    window.localStorage.removeItem(\"utopiasoftware-edpms-app-status\");\r\n                }\r\n\r\n                // flag that the user just completed a sign in for this session\r\n                window.sessionStorage.setItem(\"utopiasoftware-edpms-user-logged-in\", \"yes\");\r\n\r\n                // move user to the main menu page\r\n                await Promise.all([$('ons-splitter').get(0).content.load(\"app-main-template\"),\r\n                    $('#loader-modal').get(0).hide()]);\r\n                // display a toast to the user\r\n                //ons.notification.toast(`<ons-icon icon=\"md-check\" size=\"20px\" style=\"color: #00D5C3\"></ons-icon> Welcome ${serverResponse.firstname}`, {timeout:3000});\r\n            }\r\n            catch(err){\r\n                $('#loader-modal').get(0).hide();\r\n                ons.notification.alert(err.message, {title: '<span style=\"color: red\">Sign In Failed</span>',\r\n                    buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Search Project page\r\n     */\r\n    searchProjectPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * object holds the currently searched and chosen project object\r\n         */\r\n        currentlySelectedProject: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                /*$('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.backButtonClicked;*/\r\n                event.target.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.backButtonClicked;\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator =\r\n                    $('#search-project-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.\r\n                formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidated);\r\n\r\n                try{\r\n                    // keep device awake during the downloading process\r\n                    window.plugins.insomnia.keepAwake();\r\n                    // check if the user just completed a signin or log-in\r\n                    if(window.sessionStorage.getItem(\"utopiasoftware-edpms-user-logged-in\") === \"yes\" &&\r\n                        window.sessionStorage.getItem(\"utopiasoftware-edpms-refresh-page\") !== \"yes\") {\r\n                        // beginning uploading app data\r\n                        $('#determinate-progress-modal .modal-message').html('Downloading projects data for offline use...');\r\n                        $('#determinate-progress-modal').get(0).show();\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 30;\r\n\r\n                        // get the projects data to be cached\r\n                        let serverResponse = await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/mobile/loadprojects.php\",\r\n                                type: \"post\",\r\n                                contentType: \"application/x-www-form-urlencoded\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"X-PTRACKER-APP\", \"mobile\");\r\n                                },\r\n                                dataType: \"text\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: true,\r\n                                data: {}\r\n                            }\r\n                        ));\r\n\r\n                        serverResponse = JSON.parse(serverResponse); // convert the response to JSON object\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 35;\r\n\r\n                        // delete all previous project data/docs\r\n                        let allProjects = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                            selector: {\r\n                                \"TYPE\": {\r\n                                    \"$eq\": \"projects\"\r\n                                }},\r\n                            fields: [\"_id\", \"_rev\", \"PROJECTID\", \"TITLE\", \"CONTRACTSUM\", \"CONTRACTOR\", \"CONTRACTORID\", \"MDAID\", \"TYPE\"],\r\n                            use_index: [\"ptracker-index-designdoc\", \"DOC_TYPE_INDEX\"]\r\n                        });\r\n\r\n                        // get all the returned projects and delete them\r\n                        allProjects = allProjects.docs.map((currentValue, index, array) => {\r\n                            currentValue._deleted = true; // mark the document as deleted\r\n                            return currentValue;\r\n                        });\r\n\r\n                        // check if there are any project data to delete\r\n                        if(allProjects.length > 0){\r\n                            // delete the already saved projects\r\n                            await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(allProjects);\r\n                        }\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 45;\r\n\r\n                        // store the all the project data received\r\n                        await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(serverResponse);\r\n                        // inform the user that milestone data is being downloaded for offline use\r\n                        $('#determinate-progress-modal .modal-message').html('Downloading milestones data for offline use...');\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 50;\r\n\r\n                        // get the milestones data to be cached\r\n                        serverResponse = await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/mobile/loadboq.php\",\r\n                                type: \"post\",\r\n                                contentType: \"application/x-www-form-urlencoded\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"X-PTRACKER-APP\", \"mobile\");\r\n                                },\r\n                                dataType: \"text\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: true,\r\n                                data: {}\r\n                            }\r\n                        ));\r\n\r\n                        serverResponse = JSON.parse(serverResponse); // convert the response to JSON object\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 75;\r\n\r\n                        // delete all previous milestones /docs\r\n                        allProjects = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                            selector: {\r\n                                \"TYPE\": {\r\n                                    \"$eq\": \"BOQ\"\r\n                                }},\r\n                            fields: [\"_id\", \"_rev\", \"CATEGORY\", \"AMOUNT\", \"RATE\", \"PROJECTID\", \"DDATE\", \"BOQID\", \"TYPE\"],\r\n                            use_index: [\"ptracker-index-designdoc\", \"DOC_TYPE_INDEX\"]\r\n                        });\r\n\r\n                        // get all the returned milestones and delete them\r\n                        allProjects = allProjects.docs.map((currentValue, index, array) => {\r\n                            currentValue._deleted = true; // mark the document as deleted\r\n                            return currentValue;\r\n                        });\r\n\r\n                        // check if there are any milestone data to delete\r\n                        if(allProjects.length > 0){\r\n                            // delete the already saved milestone data\r\n                            await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(allProjects);\r\n                        }\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 100;\r\n\r\n                        // store the all the milestone data received\r\n                        await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(serverResponse);\r\n                    }\r\n\r\n                    // check if the user just completed a signin or log-in\r\n                    if(window.sessionStorage.getItem(\"utopiasoftware-edpms-user-logged-in\") !== \"yes\" &&\r\n                        ! utopiasoftware[utopiasoftware_app_namespace].model.userDetails) { // user did NOT just log in / sign in\r\n                        // get the userDetails data from the app database\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.userDetails =\r\n                            (await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.get(\"userDetails\"));\r\n                    }\r\n\r\n                    // check if the user just completed a signin or log-in\r\n                    if(window.sessionStorage.getItem(\"utopiasoftware-edpms-user-logged-in\") === \"yes\" &&\r\n                        window.sessionStorage.getItem(\"utopiasoftware-edpms-refresh-page\") !== \"yes\") {\r\n                        // hide the progress loader\r\n                        await Promise.all([$('#determinate-progress-modal').get(0).hide()]);\r\n                    }\r\n\r\n                    // hide the loader modal\r\n                    await Promise.all([$('#loader-modal').get(0).hide()]);\r\n\r\n                    // this only displays when page is NOT marked as being loaded from a user refresh request\r\n                    if(window.sessionStorage.getItem(\"utopiasoftware-edpms-refresh-page\") !== \"yes\") {\r\n                        // display a toast to the user\r\n                        ons.notification.toast(`<ons-icon icon=\"md-check\" size=\"20px\" style=\"color: #00D5C3\"></ons-icon> <span style=\"text-transform: capitalize; display: inline-block; margin-left: 1em\">Welcome ${utopiasoftware[utopiasoftware_app_namespace].model.userDetails.userDetails.firstname}</span>`, {timeout: 3000});\r\n                    }\r\n                }\r\n                catch(err){\r\n                    // display error message indicating that projects data could not be loaded\r\n                    $('#search-project-page .project-data-download-error').css(\"display\", \"block\");\r\n                    $('#determinate-progress-modal').get(0).hide();\r\n                    $('#loader-modal').get(0).hide();\r\n                }\r\n                finally {\r\n                    // clear the page refresh marker from device session storage\r\n                    window.sessionStorage.removeItem(\"utopiasoftware-edpms-refresh-page\");\r\n                    window.plugins.insomnia.allowSleepAgain(); // the device can go to sleep now\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#search-project-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#search-project-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // remove any tooltip being displayed on all forms on the page\r\n            $('#search-project-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n            $('#search-project-page [data-hint]').removeAttr(\"data-hint\");\r\n            // reset the form validator object on the page\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.destroy();\r\n            // destroy the currently selected project object\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.\r\n                currentlySelectedProject = null;\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the \"Project Search\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async searchButtonClicked(keyEvent){\r\n\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // run the validation method for the project search form\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.whenValidate();\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the download of projects data fails and\r\n         * the user hits the \"Please Retry\" button\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async retryProjectDataDownloadButtonClicked(){\r\n\r\n            // hide the page preloader\r\n            $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n            // hide the previous project details being displayed\r\n            $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n            // hide all previous error messages (if any)\r\n            $('#search-project-page .no-project-found').css(\"display\", \"none\");\r\n            $('#search-project-page .project-data-download-error').css(\"display\", \"none\");\r\n            // hide the device keyboard\r\n            Keyboard.hide();\r\n\r\n            try {\r\n                // call the method used to load app project data into the persistent database\r\n                await utopiasoftware[utopiasoftware_app_namespace].appCachedData.loadProjectData(true);\r\n                // error the project data download error message\r\n                $('#search-project-page .project-data-download-error').css(\"display\", \"none\");\r\n            }\r\n            catch(err){\r\n                // display the project data download error message\r\n                $('#search-project-page .project-data-download-error').css(\"display\", \"block\");\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the project search search/find form is successfully validated\r\n         * @returns {Promise<void>}\r\n         */\r\n        async formValidated(){\r\n            // show the page preloader\r\n            $('#search-project-page .page-preloader').css(\"display\", \"block\");\r\n            // hide the previous project details being displayed\r\n            $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n            // hide all previous error messages (if any)\r\n            $('#search-project-page .no-project-found').css(\"display\", \"none\");\r\n            $('#search-project-page .project-data-download-error').css(\"display\", \"none\");\r\n            // hide the bottom toolbar of the page\r\n            $('#search-project-page ons-bottom-toolbar').css(\"display\", \"none\");\r\n\r\n            // hide the device keyboard\r\n            Keyboard.hide();\r\n\r\n            try{\r\n\r\n                // search the app database for the project id provided\r\n                let dbQueryResult = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                    selector: {\r\n                        \"PROJECTID\": {\r\n                            \"$eq\": $('#search-project-page #search-project-search-input').get(0).value.trim().toLocaleUpperCase()\r\n                        },\r\n                        \"TYPE\": {\r\n                          \"$eq\": \"projects\"\r\n                        }},\r\n                    fields: [\"_id\", \"_rev\", \"PROJECTID\", \"TITLE\", \"CONTRACTSUM\", \"CONTRACTOR\", \"CONTRACTORID\", \"MDAID\", \"TYPE\"],\r\n                    use_index: [\"ptracker-index-designdoc\", \"FIND_PROJECT_BY_ID_INDEX\"]\r\n                });\r\n\r\n                // check that the requested project was found\r\n                if(dbQueryResult.docs.length == 0){ // search project was NOT FOUND\r\n                    // hide the page preloader\r\n                    $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n                    // inform user that no project was found\r\n                    $('#search-project-page .no-project-found').css(\"display\", \"block\");\r\n                    // hide the previous project details being displayed\r\n                    $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n                    // hide all previous error messages\r\n                    $('#search-project-page .project-data-download-error').css(\"display\", \"none\");\r\n                    // hide the bottom toolbar of the page\r\n                    $('#search-project-page ons-bottom-toolbar').css(\"display\", \"none\");\r\n                    return; // exit the method here\r\n                }\r\n\r\n                // if the method gets to this point, it means a project was found\r\n                // assign the searched project object as the currently searched and chosen project object\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.\r\n                    currentlySelectedProject = dbQueryResult.docs[0];\r\n                // create the searched project details to be displayed\r\n                let searchedProjectDetails = `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Project ID</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: uppercase; padding: 1rem;\">${dbQueryResult.docs[0].PROJECTID}</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Title</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: capitalize; padding: 1rem;\">${dbQueryResult.docs[0].TITLE}</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Contractor</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: capitalize; padding: 1rem;\">${dbQueryResult.docs[0].CONTRACTOR}</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Contract Sum</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: capitalize; padding: 1rem;\">${kendo.toString(kendo.parseFloat(dbQueryResult.docs[0].CONTRACTSUM), \"n2\")}</div>`;\r\n\r\n                // attach the generated project details to the page\r\n                $('#search-project-page #search-project-details').html(searchedProjectDetails);\r\n\r\n                // hide the page preloader\r\n                $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n\r\n                // perform actions to reveal result\r\n                kendo.fx($('#search-project-page #search-project-details')).fade(\"in\").duration(550).play();\r\n                await Promise.\r\n                resolve(kendo.fx($('#search-project-page ons-bottom-toolbar')).slideIn(\"up\").duration(600).play());\r\n                $('#search-project-page ons-bottom-toolbar').css(\"display\", \"block\");\r\n            }\r\n            catch(err){\r\n                // hide the page preloader\r\n                $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n                // inform user that no project was found\r\n                $('#search-project-page .no-project-found').css(\"display\", \"block\");\r\n                // hide the previous project details being displayed\r\n                $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n                // hide the project data download error\r\n                $('#search-project-page .project-data-download-error').css(\"display\", \"none\");\r\n                // hide the bottom toolbar of the page\r\n                $('#search-project-page ons-bottom-toolbar').css(\"display\", \"none\");\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the 'Proceed' button is clicked\r\n         */\r\n        proceedButtonClicked(){\r\n\r\n            // move to the project evaluation page. Also pass along the currently chosen project object\r\n            $('#app-main-navigator').get(0).pushPage(\"project-evaluation-page.html\", {animation: \"lift-md\",\r\n            data: {projectData: utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.\r\n                    currentlySelectedProject}});\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Project Evaluation page\r\n     */\r\n    projectEvaluationPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the Viewer object used to display the evaluations snapshots\r\n         */\r\n        pictureViewer: null,\r\n\r\n        /**\r\n         * used to hold the retrieved project milestones\r\n         */\r\n        projectMilestones: null,\r\n\r\n        /**\r\n         * holds the project picturesUrls array.\r\n         * the 1st element of the array is ALWAYS null with subsequent elements holds the url for the pictures\r\n         */\r\n        projectPicturesUrls: [null],\r\n\r\n        /**\r\n         * holds the Google Map object used to display the current location of the project being evaluated\r\n         */\r\n        projectEvaluationMap: null,\r\n\r\n        /**\r\n         * holds the Geo location object for the project. The object is gotten from the device's GPS\r\n         */\r\n        projectGeoPosition: null,\r\n\r\n        /**\r\n         * this property indicates if the picture viewer widget is being displayed or not\r\n         */\r\n        isPictureViewerShowing: false,\r\n\r\n        /**\r\n         * property indicates if project evaluation has commenced on the selected/chosen project.\r\n         * Project evaluation is marked has 'started' if any of the initial states for evaluation is changed by the user\r\n         */\r\n        hasProjectEvaluationStarted: false,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false\r\n                || !ej || !Viewer){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.projectEvaluationPageViewModel.backButtonClicked;\r\n\r\n                // show the page preloader\r\n                $('#project-evaluation-page .page-preloader').css(\"display\", \"block\");\r\n                // hide the items that are not to be displayed\r\n                $('#project-evaluation-page .project-evaluation-instructions, ' +\r\n                    '#project-evaluation-page .content, #project-evaluation-page .no-milestone-found').\r\n                css(\"display\", \"none\");\r\n\r\n                // pick the project data object for which milestones are to be evaluated\r\n                let projectData = $('#app-main-navigator').get(0).topPage.data.projectData;\r\n\r\n                try{\r\n                    // search the app database for milestones using the project id provided\r\n                    let dbQueryResult = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                        selector: {\r\n                            \"BOQID\": {\r\n                                \"$exists\": true\r\n                            },\r\n                            \"TYPE\": {\r\n                                \"$eq\": \"BOQ\"\r\n                            },\r\n                            \"PROJECTID\": {\r\n                                \"$eq\": projectData.PROJECTID\r\n                            }\r\n                        },\r\n                        use_index: [\"ptracker-index-designdoc\", \"FIND_BOQ_BY_ID_INDEX\"]\r\n\r\n                    });\r\n\r\n                    // check if any milestones were returned\r\n                    if(dbQueryResult.docs.length == 0) { // no milestones were found for the project\r\n                        throw \"error\"; // throw an error\r\n                    }\r\n\r\n                    // if the code gets to this point, milestones were returned\r\n                    // sort the returned milestones array\r\n                    dbQueryResult.docs.sort(function(firstElem, secondElement){\r\n                        return (window.parseInt(firstElem.BOQID) - window.parseInt(secondElement.BOQID));\r\n                    });\r\n\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectMilestones = dbQueryResult.docs; // update the current project milestones\r\n\r\n                    // create the evaluation carousel item based on the milestones retrieved\r\n                    let carouselContent = \"\";\r\n                    for(let index = 0; index < dbQueryResult.docs.length; index++)\r\n                    {\r\n                        carouselContent = `\r\n                        <ons-carousel-item style=\"overflow-y: auto\">\r\n                            <ons-card>\r\n                                <div style=\"font-size: 1.2em\">\r\n                                    ${dbQueryResult.docs[index].CATEGORY}\r\n                                </div>\r\n                                <div class=\"project-evaluation-slider\"></div>\r\n                                <div class=\"project-evaluation-milestone-amount\" style=\"margin-top: 1em; font-size: 1em;\">\r\n                                    <span style=\"display: inline-block; font-style: italic; margin-right: 1em;\">Milestone Value </span> \r\n                                    ${kendo.toString(kendo.parseFloat(dbQueryResult.docs[index].AMOUNT), \"n2\")}\r\n                                </div>\r\n                                <div class=\"project-evaluation-milestone-current-value\" style=\"font-size: 1em;\">\r\n                                    <span style=\"display: inline-block; font-style: italic; margin-right: 1em;\">Value Completed </span> \r\n                                    ${kendo.toString(kendo.parseFloat(0), \"n2\")}\r\n                                </div>\r\n                            </ons-card>\r\n                        </ons-carousel-item>`;\r\n                        $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n                    } // end of for loop\r\n\r\n                    // append the carousel content used for displaying evaluation pictures\r\n                    carouselContent = `\r\n                    <ons-carousel-item style=\"overflow-y: scroll\">\r\n                        <div class=\"row project-evaluation-images-container\" style=\"margin-top: 1.5em;\">\r\n                            <div class=\"col-xs-6\" style=\"padding: 0.5em; position: relative\">\r\n                                <div style=\"position: absolute; top: 5px;\">\r\n                                    <ons-speed-dial id=\"project-evaluation-picture-speed-dial-1\" direction=\"down\">\r\n                                        <ons-fab modifier=\"utopiasoftware-pic-capture-speed-dial\"\r\n                                                 class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                 onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureSpeedDialClicked(1)\">\r\n                                            <ons-icon icon=\"md-image-o\"></ons-icon>\r\n                                        </ons-fab>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureCaptureButtonClicked(1)\">\r\n                                            <ons-icon icon=\"md-camera\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.deletePictureButtonClicked(1)\">\r\n                                            <ons-icon icon=\"md-delete\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                    </ons-speed-dial>\r\n                                </div>\r\n                                <img id=\"project-evaluation-picture-1\" src=\"css/app-images/project-evaluation-photo-placeholder.png\" style=\"width: 100%; border: 2px darkgray groove\" alt=\"Picture 1\">\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"padding: 0.5em; position: relative\">\r\n                                <div style=\"position: absolute; top: 5px;\">\r\n                                    <ons-speed-dial id=\"project-evaluation-picture-speed-dial-2\" direction=\"down\">\r\n                                        <ons-fab modifier=\"utopiasoftware-pic-capture-speed-dial\"\r\n                                                 class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                 onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureSpeedDialClicked(2)\">\r\n                                            <ons-icon icon=\"md-image-o\"></ons-icon>\r\n                                        </ons-fab>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureCaptureButtonClicked(2)\">\r\n                                            <ons-icon icon=\"md-camera\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.deletePictureButtonClicked(2)\">\r\n                                            <ons-icon icon=\"md-delete\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                    </ons-speed-dial>\r\n                                </div>\r\n                                <img id=\"project-evaluation-picture-2\" src=\"css/app-images/project-evaluation-photo-placeholder.png\" style=\"width: 100%; border: 2px darkgray groove\" alt=\"Picture 2\">\r\n                            </div>\r\n                            <div class=\"col-xs-offset-3 col-xs-6\" style=\"padding: 0.5em; position: relative\">\r\n                                <div style=\"position: absolute; top: 5px;\">\r\n                                    <ons-speed-dial id=\"project-evaluation-picture-speed-dial-3\" direction=\"down\">\r\n                                        <ons-fab modifier=\"utopiasoftware-pic-capture-speed-dial\"\r\n                                                 class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                 onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureSpeedDialClicked(3)\">\r\n                                            <ons-icon icon=\"md-image-o\"></ons-icon>\r\n                                        </ons-fab>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureCaptureButtonClicked(3)\">\r\n                                            <ons-icon icon=\"md-camera\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.deletePictureButtonClicked(3)\">\r\n                                            <ons-icon icon=\"md-delete\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                    </ons-speed-dial>\r\n                                </div>\r\n                                <img id=\"project-evaluation-picture-3\" src=\"css/app-images/project-evaluation-photo-placeholder.png\" style=\"width: 100%; border: 2px darkgray groove\" alt=\"Picture 3\">\r\n                            </div>\r\n                        </div>\r\n                    </ons-carousel-item>`;\r\n                    // append the generated carousel content to the project evaluation carousel\r\n                    $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n\r\n                    // append the carousel content used for displaying project location on a map\r\n                    carouselContent = `\r\n                    <ons-carousel-item style=\"position: relative;\">\r\n                        <div id=\"project-evaluation-map\" style=\"position: absolute; top: 0; left: 0; width: 100%; \r\n                            height: 100%; bottom: 0; border: 1px #00d5c3 solid; text-align: center;\">\r\n                            <ons-button style=\"background-color: #3f51b5; position: relative; top: 3px;\r\n                            display: inline-block;\"\r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].\r\n                            controller.projectEvaluationPageViewModel.getProjectGeoLocationButtonClicked()\">Get Project Location</ons-button>\r\n                            <div id=\"project-evaluation-gps-progress\" \r\n                            style=\"position: relative; display: none; top: 65px; text-align: center\">\r\n                                <ons-progress-circular indeterminate modifier=\"project-gps-location-progress\"></ons-progress-circular>\r\n                            </div>\r\n                            <div id=\"project-evaluation-gps-location-tag\" style=\"color: #ffffff; \r\n                            font-weight: bold; font-size: 0.8em; text-transform: uppercase; \r\n                            background-color: rgba(0,213,195,0.80); padding: 0.6em; border-radius: 10px; \r\n                            width: 80%; position: absolute; bottom: 2px; display: inline-block; \r\n                            left: 10%; \r\n                            overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\">Location:</div>\r\n                        </div>\r\n                    </ons-carousel-item>`;\r\n                    // append the generated carousel content to the project evaluation carousel\r\n                    $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n\r\n                    // append the carousel content used for displaying project remarks textarea\r\n                    carouselContent = `\r\n                    <ons-carousel-item style=\"overflow-y: auto\">\r\n                        <textarea id=\"project-evaluation-remarks\" spellcheck=\"true\" \r\n                        style=\"width: 80%; height: 4em; margin-left: 10%;\r\n                        margin-right: 10%; border: none; border-bottom: 2px #00D5C3 solid; \r\n                        border-left: 2px #00D5C3 solid; border-right: 2px #00D5C3 solid; \r\n                        background-color: transparent;\"></textarea>\r\n                    </ons-carousel-item>`;\r\n                    // append the generated carousel content to the project evaluation carousel\r\n                    $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n\r\n                    // create the project evaluation slider elements\r\n                    $('#project-evaluation-page .project-evaluation-slider').\r\n                    each(function(index, element){\r\n                        element._ptracker_index = index; //  store the index position of the element within the collection on the element itself\r\n                        // create each milestone evaluation slider\r\n                        let aSlider = new ej.inputs.Slider({\r\n                            min: 0,\r\n                            max: 100,\r\n                            value: 0,\r\n                            step: 1,\r\n                            orientation: 'Horizontal',\r\n                            type: 'MinRange',\r\n                            created: function(){\r\n                                $('.e-handle', element).text(this.value);\r\n                            },\r\n                            change: function(changeEvent){\r\n                                $('.e-handle', element).text(changeEvent.value);\r\n                                // update the project evaluation started flag to indicate evaluation has started\r\n                                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                    projectEvaluationPageViewModel.hasProjectEvaluationStarted = true;\r\n                            },\r\n                            changed: function(changedEvent){\r\n                                // update the milestone current value based on changes in the slider\r\n                                $('.project-evaluation-milestone-current-value', $(element).closest('ons-card'))\r\n                                    .html(`<span style=\"display: inline-block; font-style: italic; margin-right: 1em;\">Value Completed </span> \r\n                                    ${kendo.toString(kendo.parseFloat((changedEvent.value / 100) * kendo.parseFloat(dbQueryResult.docs[element._ptracker_index].AMOUNT)), \"n2\")}`);\r\n                            }\r\n                        });\r\n                        aSlider.appendTo(element);\r\n                        element._ptracker_slider = aSlider;\r\n                    });\r\n\r\n                    // create the Viewer widget used to view the project evaluation photos\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.pictureViewer =\r\n                        new Viewer($('#project-evaluation-page .project-evaluation-images-container').get(0),\r\n                            {inline: false,\r\n                                toolbar: {\r\n                                    prev: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    next: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    zoomIn: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    zoomOut: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    oneToOne: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    reset: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    play: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    rotateLeft: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    rotateRight: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    flipHorizontal: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    flipVertical: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    }\r\n                                },\r\n                                backdrop: 'static',\r\n                                shown: function(){ // event is triggered when Picture Viewer is shown\r\n                                    // indicate that the picture viewer widget is showing\r\n                                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        projectEvaluationPageViewModel.isPictureViewerShowing = true;\r\n                                },\r\n                                hidden: function(){ // event is triggered when Picture Viewer is hidden\r\n                                    // indicate that the picture viewer widget is hidden\r\n                                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        projectEvaluationPageViewModel.isPictureViewerShowing = false;\r\n                                }});\r\n\r\n                    // hide the page preloader\r\n                    $('#project-evaluation-page .page-preloader').css(\"display\", \"none\");\r\n                    // show the items that are to be displayed\r\n                    $('#project-evaluation-page .project-evaluation-instructions, #project-evaluation-page .content').\r\n                    css(\"display\", \"block\");\r\n                    $('#project-evaluation-page #project-evaluation-next-button').\r\n                    css(\"display\", \"inline-block\");\r\n                }\r\n                catch (e) {\r\n                    // hide the page preloader\r\n                    $('#project-evaluation-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide the items that are not to be displayed\r\n                    $('#project-evaluation-page .project-evaluation-instructions, #project-evaluation-page .content').\r\n                    css(\"display\", \"none\");\r\n                    $('#project-evaluation-page #project-evaluation-prev-button, #project-evaluation-page #project-evaluation-next-button').\r\n                    css(\"display\", \"none\");\r\n                    // display the message to inform user that there are no milestones available for the project\r\n                    $('#project-evaluation-page .no-milestone-found').css(\"display\", \"block\");\r\n                }\r\n                finally{\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n\r\n            // REMOVE the app background transparency, map np longer showing\r\n            $('html, body').removeClass('utopiasoftware-transparent');\r\n\r\n            // check if Map already exists and is ready to be used\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap &&\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady === true){\r\n            // hide the map object\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectEvaluationMap.setVisible(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the pictures Viewer widget instance\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.pictureViewer){\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.pictureViewer.destroy();\r\n            }\r\n            // reset other object properties\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectPicturesUrls = [null];\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.hasProjectEvaluationStarted = false;\r\n\r\n            // check if Map already exists and is ready to be used\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap &&\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady === true){\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectEvaluationMap.remove();\r\n            }\r\n\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectEvaluationMap = null;\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectGeoPosition = null;\r\n\r\n            // destroy slider widgets created\r\n            $('#project-evaluation-page .project-evaluation-slider').\r\n            each(function(index, element){\r\n                // destroy the slider widget attached to this element\r\n                element._ptracker_slider.destroy();\r\n                element._ptracker_slider = null;\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        async backButtonClicked(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // check if the Picture Viewer widget is showing\r\n            if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.isPictureViewerShowing === true){ // Picture Viewer is showing\r\n                // hide it\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.pictureViewer.hide();\r\n                return; // exit\r\n            }\r\n\r\n            // check if project evaluation has already started\r\n           if(// update the project evaluation started flag to indicate evaluation has started\r\n               utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                   projectEvaluationPageViewModel.hasProjectEvaluationStarted === true){ // evaluation has started\r\n\r\n               // inform user that leaving this page will mean that current evaluation data is lost. does user want to leave?\r\n               let leaveProjectEvaluation = await ons.notification.confirm('',\r\n                   {title: '<ons-icon icon=\"md-alert-triangle\" style=\"color: #3f51b5\" size=\"33px\"></ons-icon> <span style=\"color: #3f51b5; display: inline-block; margin-left: 1em;\">Warning</span>',\r\n                       messageHTML: `You have NOT completed the evaluation. If you leave now, all evaluation data will be cancelled.<br><br> Do you want to leave the project evaluation?`,\r\n                       buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'});\r\n\r\n               if(leaveProjectEvaluation == 0){ // user does not want to project evaluation, so exit method now\r\n                   return; // exit method\r\n               }\r\n           }\r\n\r\n            // move to the project evaluation page\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is used to control the behaviour of the picture speed dials\r\n         *\r\n         * @param pictureNumber {Integer} holds the number/position of the picture.\r\n         * The position of pictures starts from 1 (i.e. 1-based counting)\r\n         */\r\n        pictureSpeedDialClicked(pictureNumber){\r\n\r\n            // handler conditions for each picture speed-dial\r\n            switch(pictureNumber){ // determine what to do based on the picture number value\r\n\r\n                case 1:\r\n                    // check if the speed-dial widget that was clicked is currently opened\r\n                    if(!$('#project-evaluation-page #project-evaluation-picture-speed-dial-1').get(0).isOpen()){ // speed-dial is open\r\n                        // close all other picture speed-dials\r\n                        $('#project-evaluation-page #project-evaluation-picture-speed-dial-2').get(0).hideItems();\r\n                        $('#project-evaluation-page #project-evaluation-picture-speed-dial-3').get(0).hideItems();\r\n                    }\r\n                    break;\r\n\r\n                case 2:\r\n                    if(!$('#project-evaluation-page #project-evaluation-picture-speed-dial-2').get(0).isOpen()){ // speed-dial is open\r\n                        // close all other picture speed-dials\r\n                        $('#project-evaluation-page #project-evaluation-picture-speed-dial-1').get(0).hideItems();\r\n                        $('#project-evaluation-page #project-evaluation-picture-speed-dial-3').get(0).hideItems();\r\n                    }\r\n                    break;\r\n\r\n                case 3:\r\n                    if(!$('#project-evaluation-page #project-evaluation-picture-speed-dial-3').get(0).isOpen()){ // speed-dial is open\r\n                        // close all other picture speed-dials\r\n                        $('#project-evaluation-page #project-evaluation-picture-speed-dial-1').get(0).hideItems();\r\n                        $('#project-evaluation-page #project-evaluation-picture-speed-dial-2').get(0).hideItems();\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to capture project evaluation photos with the user's camera\r\n         *\r\n         * @param pictureNumber {Integer} holds the number/position of the picture.\r\n         * The position of pictures starts from 1 (i.e. 1-based counting)\r\n         */\r\n        async pictureCaptureButtonClicked(pictureNumber){\r\n\r\n            var permissionStatuses = null; // holds the statuses of the runtime permissions requested\r\n\r\n            try{\r\n                // request runtime permissions to use device's camera\r\n                permissionStatuses =  await new Promise(function(resolve, reject){\r\n                    cordova.plugins.diagnostic.requestRuntimePermissions(resolve, reject,[\r\n                        cordova.plugins.diagnostic.permission.CAMERA\r\n                    ]);\r\n                });\r\n\r\n                // check if the user has given permission to use the device's camera\r\n                if((!permissionStatuses) ||\r\n                    permissionStatuses[cordova.plugins.diagnostic.permission.CAMERA] !==\r\n                    cordova.plugins.diagnostic.permissionStatus.GRANTED){\r\n                    throw \"error - no runtime permissions\";\r\n                }\r\n\r\n                // disable screen orientation lock\r\n                screen.orientation.unlock();\r\n\r\n                // open the device camera app and capture a photo\r\n                let imageUrl = await new Promise(function(resolve, reject){\r\n                    navigator.camera.getPicture(resolve, reject, {\r\n                        quality: 70,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        sourceType: Camera.PictureSourceType.CAMERA,\r\n                        allowEdit: false,\r\n                        encodingType: Camera.EncodingType.JPEG,\r\n                        correctOrientation: false,\r\n                        saveToPhotoAlbum: false,\r\n                        cameraDirection: Camera.Direction.BACK\r\n                    });\r\n                });\r\n\r\n                // check what picture number the camera was used for and then display it\r\n                switch(pictureNumber){\r\n                    case 1:\r\n                        // store the image url in the correct picturesUrls array index\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            projectEvaluationPageViewModel.projectPicturesUrls[pictureNumber] = imageUrl;\r\n                        // update the image src for the correct project picture, so that picture can be displayed\r\n                        $('#project-evaluation-page #project-evaluation-picture-1').attr(\"src\", imageUrl);\r\n                        break;\r\n\r\n                    case 2:\r\n                        // store the image url in the correct picturesUrls array index\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            projectEvaluationPageViewModel.projectPicturesUrls[pictureNumber] = imageUrl;\r\n                        // update the image src for the correct project picture, so that picture can be displayed\r\n                        $('#project-evaluation-page #project-evaluation-picture-2').attr(\"src\", imageUrl);\r\n                        break;\r\n\r\n                    case 3:\r\n                        // store the image url in the correct picturesUrls array index\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            projectEvaluationPageViewModel.projectPicturesUrls[pictureNumber] = imageUrl;\r\n                        // update the image src for the correct project picture, so that picture can be displayed\r\n                        $('#project-evaluation-page #project-evaluation-picture-3').attr(\"src\", imageUrl);\r\n                        break;\r\n                }\r\n\r\n                // update the project evaluation started flag to indicate evaluation has started\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.hasProjectEvaluationStarted = true;\r\n\r\n                // update the picture viewer widget\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.pictureViewer.update();\r\n            }\r\n            catch(err){\r\n                // inform the user of the error\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Photo Capture Failed - \" + err,\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n            }\r\n            finally {\r\n                // lock the device orientation back to 'portrait'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is used to delete/remove project evaluation photos from the collection and display\r\n         *\r\n         * @param pictureNumber {Integer} holds the number/position of the picture.\r\n         * The position of pictures starts from 1 (i.e. 1-based counting)\r\n         */\r\n        async deletePictureButtonClicked(pictureNumber){\r\n\r\n            // check if the selected photo has been changed from the default (no photo)\r\n            if(! utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectPicturesUrls[pictureNumber]){ // the photo is in the default\r\n                // since the photo is in the default, there is no need to delete photo. so exit\r\n                return; // exit\r\n            }\r\n\r\n            // ask user to confirm photo delete\r\n            let deletePhoto = await ons.notification.confirm('Do you want to delete the photo?',\r\n                {title: '<ons-icon icon=\"md-delete\" style=\"color: #3f51b5\" size=\"33px\"></ons-icon> <span style=\"color: #3f51b5; display: inline-block; margin-left: 1em;\">Delete Photo</span>',\r\n                buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'});\r\n\r\n            if(deletePhoto == 0){ // user does not want to delete photo, so exit method now\r\n                return; // exit method\r\n            }\r\n\r\n            // remove the image url in the correct picturesUrls array index\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectPicturesUrls[pictureNumber] = null;\r\n            // update the image src to the \"no photo\" display\r\n            $('#project-evaluation-page #project-evaluation-picture-' + pictureNumber).\r\n            attr(\"src\", \"css/app-images/project-evaluation-photo-placeholder.png\");\r\n\r\n            // update the picture viewer widget\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.\r\n            projectEvaluationPageViewModel.pictureViewer.update();\r\n        },\r\n\r\n        /**\r\n         * method is used to retrieve the project location by using the current GPS location of the device\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async getProjectGeoLocationButtonClicked(){\r\n\r\n            var permissionStatuses = null; // holds the statuses of the runtime permissions requested\r\n\r\n            try{\r\n                // request runtime permissions to use device's GPS\r\n                permissionStatuses =  await new Promise(function(resolve, reject){\r\n                    cordova.plugins.diagnostic.requestRuntimePermissions(resolve, reject,[\r\n                        cordova.plugins.diagnostic.permission.ACCESS_FINE_LOCATION\r\n                    ]);\r\n                });\r\n\r\n                // check if the user has given permission to use the device's GPS\r\n                if((!permissionStatuses) ||\r\n                    permissionStatuses[cordova.plugins.diagnostic.permission.ACCESS_FINE_LOCATION] !==\r\n                    cordova.plugins.diagnostic.permissionStatus.GRANTED){\r\n                    throw \"error - no location permission\";\r\n                }\r\n\r\n                // check if the device GPS is enabled\r\n                let isGPSEnabled = await new Promise(function(resolve, reject){\r\n                    cordova.plugins.diagnostic.isGpsLocationEnabled(resolve, reject);\r\n                });\r\n\r\n                if(isGPSEnabled === false){ // GPS NOT ENABLED\r\n                    // inform user to enable location on device\r\n                    await ons.notification.alert('',\r\n                        {title: '<ons-icon icon=\"md-pin\" style=\"color: #3f51b5\" size=\"33px\"></ons-icon> <span style=\"color: #3f51b5; display: inline-block; margin-left: 1em;\">Location Service</span>',\r\n                            messageHTML: `You need to enable you device location service to capture the project location. <br>Switch to Location Settings or enable the location service directly?`,\r\n                            buttonLabels: ['Proceed'], modifier: 'utopiasoftware-alert-dialog'});\r\n\r\n                    // turn on the user's location services automatically\r\n                    isGPSEnabled = await new Promise(function(resolve, reject){\r\n                        cordova.plugins.locationAccuracy.request(function(){resolve(true)}, function(){resolve(false)},\r\n                            cordova.plugins.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY);\r\n                    });\r\n                    if(isGPSEnabled === false){ // GPS IS STILL NOT ENABLED\r\n                        // switch to the Location Settings screen, so user can manually enable Location Services\r\n                        cordova.plugins.diagnostic.switchToLocationSettings();\r\n\r\n                        return; // exit method\r\n                    }\r\n                }\r\n\r\n                // if method get here, GPS has been successfully enabled and app has authorisation to use it\r\n                // show the circular progress to indicate app has started working on getting user gps\r\n                $('#project-evaluation-page #project-evaluation-gps-progress').css(\"display\", \"block\");\r\n                // get project's current location using device's gps geolocation\r\n                let geoPosition = await new Promise(function(resolve, reject){\r\n                    navigator.geolocation.getCurrentPosition(resolve,\r\n                        reject,\r\n                        {enableHighAccuracy: true, timeout: 300000, maximumAge: 5000});\r\n                });\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectGeoPosition = geoPosition; // assign the retrieved geo position object to its appropriate object property\r\n\r\n                // flag that progress evaluation has started\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.hasProjectEvaluationStarted = true;\r\n\r\n                // make the app background transparent, so the map can show\r\n                $('html, body').addClass('utopiasoftware-transparent');\r\n\r\n                // update the location tag info displayed at the bottom of screen\r\n                $('#project-evaluation-page #project-evaluation-gps-location-tag').\r\n                    html(`Location: ${geoPosition.coords.latitude},${geoPosition.coords.longitude}`);\r\n\r\n                // check if Map already exists and is ready to be used\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap &&\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady === true){\r\n\r\n                    // map has previously been created and is ready for use\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap.setVisible(true); // make map visible\r\n\r\n                    // hide circular progress display\r\n                    $('#project-evaluation-page #project-evaluation-gps-progress').css(\"display\", \"none\");\r\n\r\n                    // animate the map camera\r\n                    await new Promise(function(resolve, reject){\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap.animateCamera({\r\n                            target: {lat: geoPosition.coords.latitude,\r\n                                lng: geoPosition.coords.longitude}\r\n                        }, function(){resolve();});\r\n                    });\r\n\r\n                    // clear all previous content displayed on the map\r\n                    await new Promise(function(resolve, reject){\r\n                        utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            projectEvaluationPageViewModel.projectEvaluationMap.clear(function(){resolve()});\r\n                    });\r\n\r\n                    let projectMarker = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap.addMarker({\r\n                        position: {\r\n                            \"lat\": utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                projectEvaluationPageViewModel.projectGeoPosition.coords.latitude,\r\n                            \"lng\": utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                projectEvaluationPageViewModel.projectGeoPosition.coords.longitude\r\n                        },\r\n                        icon: '#00D5C3',\r\n                        'title': $('#app-main-navigator').get(0).topPage.data.projectData.TITLE.toLocaleUpperCase(),\r\n                        animation: plugin.google.maps.Animation.BOUNCE\r\n                    });\r\n                    // display marker info window\r\n                    projectMarker.showInfoWindow();\r\n\r\n                    return; // exit method\r\n                }\r\n\r\n                // generate the geo map for the project evaluation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap =\r\n                    plugin.google.maps.Map.getMap($('#project-evaluation-page #project-evaluation-map').get(0), {\r\n                    'mapType': plugin.google.maps.MapTypeId.ROADMAP,\r\n                    'camera' : {\r\n                        target: {\r\n                            lat: geoPosition.coords.latitude,\r\n                            lng: geoPosition.coords.longitude\r\n                        },\r\n                        tilt: 90,\r\n                        zoom: 20\r\n                    },\r\n                    controls: {\r\n                        'compass': false,\r\n                        'myLocationButton': false,\r\n                        'myLocation': false,\r\n                        'indoorPicker': false,\r\n                        'zoom': false,\r\n                        'mapToolbar': false\r\n                    },\r\n                    gestures: {\r\n                        scroll: false,\r\n                        tilt: false,\r\n                        zoom: false,\r\n                        rotate: false\r\n                    },\r\n                    'preferences': {\r\n                        'zoom': {\r\n                            'minZoom': 20,\r\n                            'maxZoom': 30\r\n                        },\r\n                        'building': false\r\n                    }\r\n                });\r\n\r\n                // listen for when the map object is successfully created\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectEvaluationMap.one(plugin.google.maps.event.MAP_READY, function() {\r\n                    // hide circular progress display\r\n                    $('#project-evaluation-page #project-evaluation-gps-progress').css(\"display\", \"none\");\r\n                    // flag an internal property that indicates the the map is ready to be used\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady = true;\r\n                    // disable the ability to click on the map\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap.setClickable(false);\r\n\r\n                    // add a marker to identify the project's location on the map\r\n                    let projectMarker = utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap.addMarker({\r\n                        position: {\r\n                            \"lat\": utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                projectEvaluationPageViewModel.projectGeoPosition.coords.latitude,\r\n                            \"lng\": utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                projectEvaluationPageViewModel.projectGeoPosition.coords.longitude\r\n                        },\r\n                        icon: '#00D5C3',\r\n                        'title': $('#app-main-navigator').get(0).topPage.data.projectData.TITLE.toLocaleUpperCase(),\r\n                        animation: plugin.google.maps.Animation.BOUNCE\r\n                    });\r\n                    // display marker info window\r\n                    projectMarker.showInfoWindow();\r\n                });\r\n            }\r\n            catch(err){\r\n                // inform the user of the error\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"Location Capture Failed - \" + (err.message || err),\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"project evaluation carousel\" is changed\r\n         * @param event\r\n         */\r\n        async carouselChanged(event){\r\n            // change the css display the prev fab button\r\n            $('#project-evaluation-page #project-evaluation-prev-button').css(\"display\", \"inline-block\");\r\n            // hide the bottom toolbar of the page\r\n            $('#project-evaluation-page ons-bottom-toolbar').css(\"display\", \"none\");\r\n\r\n            // REMOVE the app background transparency, map np longer showing\r\n            $('html, body').removeClass('utopiasoftware-transparent');\r\n\r\n            // update the stay of the the fab \"prev\" or \"next\" buttons\r\n             // check if the carousel is at the last item\r\n            if(event.originalEvent.activeIndex ===\r\n                event.originalEvent.carousel.itemCount - 1) { // this is the last carousel item, so hide the next slide button\r\n                // hide the next fab button\r\n                $('#project-evaluation-page #project-evaluation-next-button').css(\"transform\", \"scale(0)\");\r\n            }\r\n            else if(event.originalEvent.activeIndex === 0) { // this is the first carousel item, so hide the prev slide button\r\n                // hide the prev fab button\r\n                $('#project-evaluation-page #project-evaluation-prev-button').css(\"transform\", \"scale(0)\");\r\n            }\r\n            else { // this is not the first or last item\r\n                $('#project-evaluation-page #project-evaluation-prev-button,#project-evaluation-page #project-evaluation-next-button')\r\n                    .css(\"transform\", \"scale(1)\");\r\n            }\r\n\r\n            // update the primary instruction and the milestone badge\r\n            if(event.originalEvent.activeIndex < utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length) // the carousel active index is less than the number of project milestones\r\n            {\r\n                // change the primary instructions\r\n                $('#project-evaluation-page #project-evaluation-primary-instruction').\r\n                html('Evaluate the milestones of project completion on a scale of 0 - 100%');\r\n                // change the milestone number\r\n                $('#project-evaluation-page #project-evaluation-milestone-badge').html(`Milestone ${event.originalEvent.activeIndex + 1}`);\r\n                return;\r\n            }\r\n            if(event.originalEvent.activeIndex == utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length) // the carousel active index is at the picture capture point\r\n            {\r\n                // change the primary instructions\r\n                $('#project-evaluation-page #project-evaluation-primary-instruction').\r\n                html('Capture the project progress in photos');\r\n                // change the milestone number\r\n                $('#project-evaluation-page #project-evaluation-milestone-badge').html(`Project Photos`);\r\n\r\n                // check if Map already exists and is ready to be used\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap &&\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady === true){\r\n                    // make the map invisible\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap.setVisible(false);\r\n                }\r\n\r\n                return;\r\n            }\r\n            if(event.originalEvent.activeIndex == utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length + 1) // the carousel active index is at the geolocation capture point\r\n            {\r\n                // change the primary instructions\r\n                $('#project-evaluation-page #project-evaluation-primary-instruction').\r\n                html('Capture the project geographical location');\r\n                // change the milestone number\r\n                $('#project-evaluation-page #project-evaluation-milestone-badge').html(`Project Location`);\r\n\r\n                // check if Map already exists and is ready to be used\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap &&\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady === true){\r\n                    // make the app background transparent, so the map can show\r\n                    $('html, body').addClass('utopiasoftware-transparent');\r\n                    // make the map visible\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap.setVisible(true);\r\n                }\r\n                return;\r\n            }\r\n            if(event.originalEvent.activeIndex == utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length + 2) // the carousel active index is at the project remarks point\r\n            {\r\n                // change the primary instructions\r\n                $('#project-evaluation-page #project-evaluation-primary-instruction').\r\n                html('Provide any remarks on the project evaluation (optional)');\r\n                // change the milestone number\r\n                $('#project-evaluation-page #project-evaluation-milestone-badge').html(`Project Evaluation Remarks`);\r\n\r\n                // display the page toolbar\r\n                await Promise.\r\n                resolve(kendo.fx($('#project-evaluation-page ons-bottom-toolbar')).slideIn(\"up\").duration(150).play());\r\n                $('#project-evaluation-page ons-bottom-toolbar').css(\"display\", \"block\");\r\n\r\n                // check if Map already exists and is ready to be used\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap &&\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectEvaluationMap._ptracker_isMapReady === true){\r\n                    // make the map invisible\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectEvaluationMap.setVisible(false);\r\n                }\r\n                return;\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the \"prev button\" for the carousel is clicked\r\n         */\r\n        prevButtonClicked(){\r\n            $('#project-evaluation-page #project-evaluation-carousel').get(0).prev();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"next button\" for the carousel is clicked\r\n         */\r\n        nextButtonClicked(){\r\n            // get the carousel used for the project evaluation\r\n            var carousel = $('#project-evaluation-page #project-evaluation-carousel').get(0);\r\n\r\n            // check which carousel index the user is on\r\n            if(carousel.getActiveIndex() === utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length) // the user is on the picture capture carousel index\r\n            {\r\n                // check if any photos have been taken at all\r\n                if(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectPicturesUrls.length === 1){ // if the length of array is 1, no photos have been taken at all\r\n                    // inform the user of the validation error\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: `Pictures not captured for project evaluation. Please take photo`,\r\n                        duration: 4000,\r\n                        position: \"center\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#ff0000', //red\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n\r\n                    return; // exit method\r\n                }\r\n\r\n                // loop through the photos for the project and check if all project photos have been taken\r\n                for(let index = 1; index < 4; index++){\r\n\r\n                    // check if the photo in this index has been taken OR not\r\n                    if(!utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectPicturesUrls[index]){\r\n\r\n                        // inform the user of the validation error\r\n                        window.plugins.toast.showWithOptions({\r\n                            message: `Picture ${index} not captured for project evaluation. Please take photo`,\r\n                            duration: 4000,\r\n                            position: \"center\",\r\n                            styling: {\r\n                                opacity: 1,\r\n                                backgroundColor: '#ff0000', //red\r\n                                textColor: '#FFFFFF',\r\n                                textSize: 14\r\n                            }\r\n                        }, function(toastEvent){\r\n                            if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                                window.plugins.toast.hide();\r\n                            }\r\n                        });\r\n\r\n                        return; // exit method\r\n                    } // end of if\r\n                } // end of for loop\r\n            }\r\n\r\n            if(carousel.getActiveIndex() === utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length + 1) // the user is on the project location capture carousel index\r\n            {\r\n                // check if the geo location in this index has been taken OR not\r\n                if(!utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectGeoPosition){\r\n\r\n                    // inform the user of validation error\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: `Project Location not captured for project evaluation. Please capture location`,\r\n                        duration: 4000,\r\n                        position: \"center\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#ff0000', //red\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n\r\n                    return; // exit method\r\n                }\r\n            }\r\n\r\n            // ALL VALIDATION SUCCESSFUL. Move to the next carousel item\r\n            carousel.next();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"Save Report\" Button is clicked\r\n         */\r\n        async saveReportButtonClicked(){\r\n\r\n            // inform the user that saving report is taking place\r\n            $('#loader-modal-message').html(\"Saving Report...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            // collect all data to be saved\r\n            var projectEvaluationReportData = {milestonesEvaluations: []}; // variable holds the project evaluation report data\r\n            // get the jQuery collection of sliders\r\n            var jQuerySliderElements = $('#project-evaluation-page .project-evaluation-slider');\r\n\r\n            // get the score of all milestones evaluated\r\n            for(let index = 0; index < utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectMilestones.length; index++){\r\n                let milestoneEvaluation = {milestoneId: utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectMilestones[index].BOQID,\r\n                milestoneTitle: utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectMilestones[index].CATEGORY,\r\n                    milestoneRate: utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectMilestones[index].RATE,\r\n                milestoneScore: jQuerySliderElements.eq(index).get(0)._ptracker_slider.value};\r\n\r\n                // add the milestoneEvaluation data to the collection\r\n                projectEvaluationReportData.milestonesEvaluations.push(milestoneEvaluation);\r\n            }\r\n\r\n            // attach the project data to the project evaluation report data\r\n            projectEvaluationReportData.projectData = $('#app-main-navigator').get(0).topPage.data.projectData;\r\n            // attach the project evalution report's geo location\r\n            projectEvaluationReportData.projectGeoPosition = {\r\n                latitude: utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                    projectEvaluationPageViewModel.projectGeoPosition.coords.latitude,\r\n            longitude: utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                projectEvaluationPageViewModel.projectGeoPosition.coords.longitude};\r\n            // attach the projection evalution report's additional remarks\r\n            projectEvaluationReportData.reportRemarks = $('#project-evaluation-page #project-evaluation-remarks').val().trim();\r\n\r\n            // create a unique report title/id for the evaluation report\r\n            let dateStamp = new Date();\r\n            projectEvaluationReportData.title = `${projectEvaluationReportData.projectData.PROJECTID}-Report-${dateStamp.getTime()}`;\r\n            // add other metadata to the evaluation report\r\n            projectEvaluationReportData.dateStamp = dateStamp.getTime();\r\n            projectEvaluationReportData.sortingDate = [kendo.toString(dateStamp, \"yyyy\"), kendo.toString(dateStamp, \"MM\"),\r\n                kendo.toString(dateStamp, \"dd\"), kendo.toString(dateStamp, \"HH\"), kendo.toString(dateStamp, \"mm\")];\r\n            projectEvaluationReportData.formattedDate = kendo.toString(dateStamp, \"yyyy-MM-dd HH:mm:ss\");\r\n            projectEvaluationReportData.evaluatedBy = utopiasoftware[utopiasoftware_app_namespace].model.userDetails.\r\n                                                        userDetails.username;\r\n            projectEvaluationReportData._id = projectEvaluationReportData.title;\r\n            projectEvaluationReportData.TYPE = \"saved report\";\r\n\r\n            try {\r\n                // save the project evaluation report data\r\n                var savedDocResponse = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                                                put(projectEvaluationReportData);\r\n\r\n                // attach all saved project photos to the saved evaluation report data\r\n                for(let index = 1; index < 4; index++){\r\n\r\n                    // convert the project photos to blobs\r\n                    let fileEntry = await new Promise(function(resolve, reject){\r\n                        window.resolveLocalFileSystemURL(utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                            projectEvaluationPageViewModel.projectPicturesUrls[index], resolve, reject);\r\n                    }); // get a FileEntry object\r\n\r\n                    let file = await new Promise(function(resolve, reject){\r\n                        fileEntry.file(resolve, reject);\r\n                    }); // get a file object\r\n\r\n                    let fileBlob = await new Promise(function(resolve, reject){\r\n                        let fileReader = new FileReader();\r\n                        fileReader.onloadend = function(){\r\n                            if(this.error){ // an error occurred\r\n                                reject(this.error); // reject the promise\r\n                            }\r\n                            // resolve to the Blob object\r\n                            resolve(new Blob([new Uint8Array(this.result)], {type: 'image/jpeg'}));\r\n                        };\r\n\r\n                        fileReader.readAsArrayBuffer(file);\r\n                    }); // get the blob object for the picture file\r\n\r\n                    // attach the image to the database document\r\n                    savedDocResponse = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                    putAttachment(savedDocResponse.id, `picture${index}.jpg`, savedDocResponse.rev, fileBlob, \"image/jpeg\");\r\n                }\r\n\r\n                console.log(\"SAVED REPORT \", projectEvaluationReportData);\r\n                // hide loader\r\n                await $('#loader-modal').get(0).hide();\r\n                // inform user the evaluation report was successfully saved\r\n                await ons.notification.alert('This evaluation report has been saved successfully',\r\n                    {title: '<ons-icon icon=\"fa-check\" style=\"color: #00B2A0; transform: scale(0.6)\" size=\"28px\"></ons-icon> <span style=\"color: #00B2A0; display: inline-block; margin-left: 1em;\">Evaluation Report Saved</span>',\r\n                        buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n\r\n                // flag to the app that you are going back to a page that needs to be refreshed\r\n                window.sessionStorage.setItem(\"utopiasoftware-edpms-refresh-page\", \"yes\");\r\n                // move back to the project search page\r\n                $('#app-main-navigator').get(0).resetToPage(\"search-project-page.html\", {pop: true});\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"SAVE ERROR\", err);\r\n                try{\r\n                    // remove the project evaluation report sheet document which failed to save properly from the app database\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                    remove(savedDocResponse.id, savedDocResponse.rev);\r\n                }\r\n                catch(err2){}\r\n                $('#loader-modal').get(0).hide();\r\n                ons.notification.alert(`saving evaluation report sheet failed. Please try again. ${err.message || \"\"}`, {title: '<span style=\"color: red\">Saving Report Failed</span>',\r\n                    buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n            }\r\n            finally{\r\n                // hide loader\r\n                $('#loader-modal').get(0).hide();\r\n            }\r\n\r\n\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the View Reports page\r\n     */\r\n    viewReportsPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.viewReportsPageViewModel.backButtonClicked;\r\n\r\n                // show the page preloader\r\n                $('#view-reports-page .page-preloader').css(\"display\", \"block\");\r\n                // hide the items that are not to be displayed\r\n                $('#view-reports-page .no-report-found, ' +\r\n                    '#view-reports-page .view-reports-load-error, #view-reports-page #view-reports-list').\r\n                css(\"display\", \"none\");\r\n\r\n                // pick the reports that have been saved by user to-date\r\n\r\n                try{\r\n                    // search the app database for milestones using the project id provided\r\n                    let dbQueryResult = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                    query(\"saved_reports_view/get_report_evaluated_by\", {\r\n                        include_docs: true,\r\n                        limit: 2,\r\n                        skip: 0,\r\n                        descending: true,\r\n                        startkey: [\"saved report\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.userDetails.userDetails.username, Date.now()],\r\n                        startkey: [\"saved report\",\r\n                            utopiasoftware[utopiasoftware_app_namespace].model.userDetails.userDetails.username,\r\n                        new Date(2018, 0, 1)]\r\n                    });\r\n\r\n                    console.log(\"VIEW REPORTS\", dbQueryResult);\r\n\r\n                    // check if any milestones were returned\r\n                    /*if(dbQueryResult.docs.length == 0) { // no milestones were found for the project\r\n                        throw \"error\"; // throw an error\r\n                    }\r\n\r\n                    // if the code gets to this point, milestones were returned\r\n                    // sort the returned milestones array\r\n                    dbQueryResult.docs.sort(function(firstElem, secondElement){\r\n                        return (window.parseInt(firstElem.BOQID) - window.parseInt(secondElement.BOQID));\r\n                    });\r\n\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.projectMilestones = dbQueryResult.docs; // update the current project milestones\r\n\r\n                    // create the evaluation carousel item based on the milestones retrieved\r\n                    let carouselContent = \"\";\r\n                    for(let index = 0; index < dbQueryResult.docs.length; index++)\r\n                    {\r\n                        carouselContent = `\r\n                        <ons-carousel-item style=\"overflow-y: auto\">\r\n                            <ons-card>\r\n                                <div style=\"font-size: 1.2em\">\r\n                                    ${dbQueryResult.docs[index].CATEGORY}\r\n                                </div>\r\n                                <div class=\"project-evaluation-slider\"></div>\r\n                                <div class=\"project-evaluation-milestone-amount\" style=\"margin-top: 1em; font-size: 1em;\">\r\n                                    <span style=\"display: inline-block; font-style: italic; margin-right: 1em;\">Milestone Value </span> \r\n                                    ${kendo.toString(kendo.parseFloat(dbQueryResult.docs[index].AMOUNT), \"n2\")}\r\n                                </div>\r\n                                <div class=\"project-evaluation-milestone-current-value\" style=\"font-size: 1em;\">\r\n                                    <span style=\"display: inline-block; font-style: italic; margin-right: 1em;\">Value Completed </span> \r\n                                    ${kendo.toString(kendo.parseFloat(0), \"n2\")}\r\n                                </div>\r\n                            </ons-card>\r\n                        </ons-carousel-item>`;\r\n                        $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n                    } // end of for loop\r\n\r\n                    // append the carousel content used for displaying evaluation pictures\r\n                    carouselContent = `\r\n                    <ons-carousel-item style=\"overflow-y: scroll\">\r\n                        <div class=\"row project-evaluation-images-container\" style=\"margin-top: 1.5em;\">\r\n                            <div class=\"col-xs-6\" style=\"padding: 0.5em; position: relative\">\r\n                                <div style=\"position: absolute; top: 5px;\">\r\n                                    <ons-speed-dial id=\"project-evaluation-picture-speed-dial-1\" direction=\"down\">\r\n                                        <ons-fab modifier=\"utopiasoftware-pic-capture-speed-dial\"\r\n                                                 class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                 onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureSpeedDialClicked(1)\">\r\n                                            <ons-icon icon=\"md-image-o\"></ons-icon>\r\n                                        </ons-fab>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureCaptureButtonClicked(1)\">\r\n                                            <ons-icon icon=\"md-camera\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.deletePictureButtonClicked(1)\">\r\n                                            <ons-icon icon=\"md-delete\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                    </ons-speed-dial>\r\n                                </div>\r\n                                <img id=\"project-evaluation-picture-1\" src=\"css/app-images/project-evaluation-photo-placeholder.png\" style=\"width: 100%; border: 2px darkgray groove\" alt=\"Picture 1\">\r\n                            </div>\r\n                            <div class=\"col-xs-6\" style=\"padding: 0.5em; position: relative\">\r\n                                <div style=\"position: absolute; top: 5px;\">\r\n                                    <ons-speed-dial id=\"project-evaluation-picture-speed-dial-2\" direction=\"down\">\r\n                                        <ons-fab modifier=\"utopiasoftware-pic-capture-speed-dial\"\r\n                                                 class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                 onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureSpeedDialClicked(2)\">\r\n                                            <ons-icon icon=\"md-image-o\"></ons-icon>\r\n                                        </ons-fab>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureCaptureButtonClicked(2)\">\r\n                                            <ons-icon icon=\"md-camera\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.deletePictureButtonClicked(2)\">\r\n                                            <ons-icon icon=\"md-delete\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                    </ons-speed-dial>\r\n                                </div>\r\n                                <img id=\"project-evaluation-picture-2\" src=\"css/app-images/project-evaluation-photo-placeholder.png\" style=\"width: 100%; border: 2px darkgray groove\" alt=\"Picture 2\">\r\n                            </div>\r\n                            <div class=\"col-xs-offset-3 col-xs-6\" style=\"padding: 0.5em; position: relative\">\r\n                                <div style=\"position: absolute; top: 5px;\">\r\n                                    <ons-speed-dial id=\"project-evaluation-picture-speed-dial-3\" direction=\"down\">\r\n                                        <ons-fab modifier=\"utopiasoftware-pic-capture-speed-dial\"\r\n                                                 class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                 onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureSpeedDialClicked(3)\">\r\n                                            <ons-icon icon=\"md-image-o\"></ons-icon>\r\n                                        </ons-fab>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.pictureCaptureButtonClicked(3)\">\r\n                                            <ons-icon icon=\"md-camera\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                        <ons-speed-dial-item modifier=\"utopiasoftware-pic-capture-speed-dial-item\"\r\n                                                             class=\"utopiasoftware-pic-capture-speed-dial\" \r\n                                                             onclick=\"utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                                 projectEvaluationPageViewModel.deletePictureButtonClicked(3)\">\r\n                                            <ons-icon icon=\"md-delete\"></ons-icon>\r\n                                        </ons-speed-dial-item>\r\n                                    </ons-speed-dial>\r\n                                </div>\r\n                                <img id=\"project-evaluation-picture-3\" src=\"css/app-images/project-evaluation-photo-placeholder.png\" style=\"width: 100%; border: 2px darkgray groove\" alt=\"Picture 3\">\r\n                            </div>\r\n                        </div>\r\n                    </ons-carousel-item>`;\r\n                    // append the generated carousel content to the project evaluation carousel\r\n                    $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n\r\n                    // append the carousel content used for displaying project location on a map\r\n                    carouselContent = `\r\n                    <ons-carousel-item style=\"position: relative;\">\r\n                        <div id=\"project-evaluation-map\" style=\"position: absolute; top: 0; left: 0; width: 100%; \r\n                            height: 100%; bottom: 0; border: 1px #00d5c3 solid; text-align: center;\">\r\n                            <ons-button style=\"background-color: #3f51b5; position: relative; top: 3px;\r\n                            display: inline-block;\"\r\n                            onclick=\"utopiasoftware[utopiasoftware_app_namespace].\r\n                            controller.projectEvaluationPageViewModel.getProjectGeoLocationButtonClicked()\">Get Project Location</ons-button>\r\n                            <div id=\"project-evaluation-gps-progress\" \r\n                            style=\"position: relative; display: none; top: 65px; text-align: center\">\r\n                                <ons-progress-circular indeterminate modifier=\"project-gps-location-progress\"></ons-progress-circular>\r\n                            </div>\r\n                            <div id=\"project-evaluation-gps-location-tag\" style=\"color: #ffffff; \r\n                            font-weight: bold; font-size: 0.8em; text-transform: uppercase; \r\n                            background-color: rgba(0,213,195,0.80); padding: 0.6em; border-radius: 10px; \r\n                            width: 80%; position: absolute; bottom: 2px; display: inline-block; \r\n                            left: 10%; \r\n                            overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\">Location:</div>\r\n                        </div>\r\n                    </ons-carousel-item>`;\r\n                    // append the generated carousel content to the project evaluation carousel\r\n                    $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n\r\n                    // append the carousel content used for displaying project remarks textarea\r\n                    carouselContent = `\r\n                    <ons-carousel-item style=\"overflow-y: auto\">\r\n                        <textarea id=\"project-evaluation-remarks\" spellcheck=\"true\" \r\n                        style=\"width: 80%; height: 4em; margin-left: 10%;\r\n                        margin-right: 10%; border: none; border-bottom: 2px #00D5C3 solid; \r\n                        border-left: 2px #00D5C3 solid; border-right: 2px #00D5C3 solid; \r\n                        background-color: transparent;\"></textarea>\r\n                    </ons-carousel-item>`;\r\n                    // append the generated carousel content to the project evaluation carousel\r\n                    $('#project-evaluation-page #project-evaluation-carousel').append(carouselContent);\r\n\r\n                    // create the project evaluation slider elements\r\n                    $('#project-evaluation-page .project-evaluation-slider').\r\n                    each(function(index, element){\r\n                        element._ptracker_index = index; //  store the index position of the element within the collection on the element itself\r\n                        // create each milestone evaluation slider\r\n                        let aSlider = new ej.inputs.Slider({\r\n                            min: 0,\r\n                            max: 100,\r\n                            value: 0,\r\n                            step: 1,\r\n                            orientation: 'Horizontal',\r\n                            type: 'MinRange',\r\n                            created: function(){\r\n                                $('.e-handle', element).text(this.value);\r\n                            },\r\n                            change: function(changeEvent){\r\n                                $('.e-handle', element).text(changeEvent.value);\r\n                                // update the project evaluation started flag to indicate evaluation has started\r\n                                utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                    projectEvaluationPageViewModel.hasProjectEvaluationStarted = true;\r\n                            },\r\n                            changed: function(changedEvent){\r\n                                // update the milestone current value based on changes in the slider\r\n                                $('.project-evaluation-milestone-current-value', $(element).closest('ons-card'))\r\n                                    .html(`<span style=\"display: inline-block; font-style: italic; margin-right: 1em;\">Value Completed </span> \r\n                                    ${kendo.toString(kendo.parseFloat((changedEvent.value / 100) * kendo.parseFloat(dbQueryResult.docs[element._ptracker_index].AMOUNT)), \"n2\")}`);\r\n                            }\r\n                        });\r\n                        aSlider.appendTo(element);\r\n                        element._ptracker_slider = aSlider;\r\n                    });\r\n\r\n                    // create the Viewer widget used to view the project evaluation photos\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                        projectEvaluationPageViewModel.pictureViewer =\r\n                        new Viewer($('#project-evaluation-page .project-evaluation-images-container').get(0),\r\n                            {inline: false,\r\n                                toolbar: {\r\n                                    prev: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    next: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    zoomIn: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    zoomOut: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    oneToOne: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    reset: {\r\n                                        show: true,\r\n                                        size: 'large',\r\n                                    },\r\n                                    play: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    rotateLeft: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    rotateRight: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    flipHorizontal: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    },\r\n                                    flipVertical: {\r\n                                        show: false,\r\n                                        size: 'large',\r\n                                    }\r\n                                },\r\n                                backdrop: 'static',\r\n                                shown: function(){ // event is triggered when Picture Viewer is shown\r\n                                    // indicate that the picture viewer widget is showing\r\n                                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        projectEvaluationPageViewModel.isPictureViewerShowing = true;\r\n                                },\r\n                                hidden: function(){ // event is triggered when Picture Viewer is hidden\r\n                                    // indicate that the picture viewer widget is hidden\r\n                                    utopiasoftware[utopiasoftware_app_namespace].controller.\r\n                                        projectEvaluationPageViewModel.isPictureViewerShowing = false;\r\n                                }});\r\n\r\n                    // hide the page preloader\r\n                    $('#project-evaluation-page .page-preloader').css(\"display\", \"none\");\r\n                    // show the items that are to be displayed\r\n                    $('#project-evaluation-page .project-evaluation-instructions, #project-evaluation-page .content').\r\n                    css(\"display\", \"block\");\r\n                    $('#project-evaluation-page #project-evaluation-next-button').\r\n                    css(\"display\", \"inline-block\");*/\r\n                }\r\n                catch (e) {\r\n                    console.log(\"REPORT VOEW ERROR\", e);\r\n\r\n                   /* // hide the page preloader\r\n                    $('#project-evaluation-page .page-preloader').css(\"display\", \"none\");\r\n                    // hide the items that are not to be displayed\r\n                    $('#project-evaluation-page .project-evaluation-instructions, #project-evaluation-page .content').\r\n                    css(\"display\", \"none\");\r\n                    $('#project-evaluation-page #project-evaluation-prev-button, #project-evaluation-page #project-evaluation-next-button').\r\n                    css(\"display\", \"none\");\r\n                    // display the message to inform user that there are no milestones available for the project\r\n                    $('#project-evaluation-page .no-milestone-found').css(\"display\", \"block\");*/\r\n                }\r\n                finally{\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        async backButtonClicked(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // move to the project evaluation page\r\n            $('#app-main-navigator').get(0).popPage();\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\n"]}