{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 26/7/2018.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * property holds the Map objects which will contain a reference to dynamically loaded ES modules.\r\n     * NOTE: modules MUST BE deleted from this property i.e. the Map object when no longer need.\r\n     * This is to enable garbage collection and prevent memory leaks.\r\n     * NOTE: the keys used within the map will be identical to the same map value used in the SystemJS.config()\r\n     */\r\n    LOADED_MODULES: new Map(),\r\n    /**\r\n     * method contains the stratup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n\r\n            if(window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") &&\r\n                window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") !== \"\"){ // there is a previous logged in user\r\n                // load the app main page\r\n                $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }\r\n            else{ // there is no previously logged in user\r\n                // load the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // prepare the inapp browser plugin by removing the default window.open() functionality\r\n                delete window.open;\r\n\r\n                // note: for most promises, we will use async-wait syntax\r\n\r\n                // create the pouchdb app database\r\n                utopiasoftware[utopiasoftware_app_namespace].model.appDatabase = new PouchDB('ptrackerdatabase.db', {\r\n                    adapter: 'cordova-sqlite',\r\n                    location: 'default',\r\n                    androidDatabaseImplementation: 2\r\n                });\r\n\r\n                // generate a password for encrypting the app database (if it does NOT already exist)\r\n                if(!window.localStorage.getItem(\"utopiasoftware-edpms-rid\") ||\r\n                    window.localStorage.getItem(\"utopiasoftware-edpms-rid\") === \"\") {\r\n                    window.localStorage.setItem(\"utopiasoftware-edpms-rid\",\r\n                        Random.uuid4(Random.engines.browserCrypto));\r\n                }\r\n                await new Promise(function(resolve, reject){\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.\r\n                    crypto(window.localStorage.getItem(\"utopiasoftware-edpms-rid\"), {ignore: '_attachments',\r\n                        cb: function(err, key){\r\n                        if(err){ // there is an error\r\n                            reject(err); // reject Promise\r\n                        }\r\n                        else{ // no error\r\n                            resolve(key); // resolve Promise\r\n                        }\r\n                    }});\r\n                });\r\n\r\n                // create the database indexes used by the app\r\n                await Promise.all([utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.createIndex({\r\n                    index: {\r\n                        fields: ['TYPE'],\r\n                        name: 'DOC_TYPE_INDEX',\r\n                        ddoc: 'ptracker-index-designdoc'\r\n                    }}),\r\n                    utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.createIndex({\r\n                        index: {\r\n                            fields: ['PROJECTID'],\r\n                            name: 'FIND_PROJECT_BY_ID_INDEX',\r\n                            ddoc: 'ptracker-index-designdoc'\r\n                        }\r\n                    })]);\r\n\r\n            }\r\n            catch(err){\r\n                console.log(\"ERROR\");\r\n            }\r\n            finally{\r\n                 // set status bar color\r\n                 StatusBar.backgroundColorByHexString(\"#00B2A0\");\r\n                 navigator.splashscreen.hide(); // hide the splashscreen\r\n                 utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fullyt loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * this is the view-model/controller for the LOGIN page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                        buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // adjust the window/view-port settings for when the soft keyboard is displayed\r\n                window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator =\r\n                    $('#login-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n                //$('#determinate-progress-modal').get(0).show();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the \"Sign In / Log In\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async loginButtonClicked(){\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware[utopiasoftware_app_namespace].controller.loginPageViewModel.formValidator.whenValidate();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the enter button is clicked on the device keyboard\r\n         *\r\n         * @param keyEvent\r\n         * @returns {Promise<void>}\r\n         */\r\n        async enterButtonClicked(keyEvent){\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // prevent the default action from occurring\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n                // hide the device keyboard\r\n                Keyboard.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async formValidated(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"You cannot sign in with an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // inform user that login validation is taking place\r\n            $('#loader-modal #loader-modal-message').html(\"Signing You In...\");\r\n            await $('#loader-modal').get(0).show();\r\n\r\n            try{\r\n                // create the form data to be submitted\r\n                let formData = {\r\n                    username: $('#login-page #login-email').val().trim(),\r\n                    password: $('#login-page #login-password').val().trim()\r\n                };\r\n\r\n                let serverResponse = await Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/mobile/login.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-PTRACKER-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: formData\r\n                    }\r\n                ));\r\n                // convert the response to an object\r\n                serverResponse = JSON.parse(serverResponse.trim());\r\n\r\n                // check if the user login was successful\r\n                if(serverResponse.status !== \"success\"){ // user log was NOT successful\r\n                    throw serverResponse; // throw error\r\n                }\r\n\r\n                // save the user's details\r\n                utopiasoftware[utopiasoftware_app_namespace].model.userDetails = {\r\n                    _id: \"userDetails\",\r\n                    userDetails: {firstname: serverResponse.firstname, username: serverResponse.username},\r\n                    type: \"userDetails\",\r\n                    _rev: (window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") &&\r\n                        window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") !== \"\") ?\r\n                        window.localStorage.getItem(\"utopiasoftware-edpms-app-status\") : null\r\n                };\r\n\r\n                // check if the user wants to remain signed in\r\n                if($('#login-page #login-remember-me').get(0).checked){ // the user wants to remian signed in\r\n                    // save the user's details to persistent database\r\n                    let databaseResponse = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.put(\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.userDetails);\r\n                    // save the returned user details rev id\r\n                    window.localStorage.setItem(\"utopiasoftware-edpms-app-status\", databaseResponse.rev);\r\n                }\r\n                else{ // user does not want to remain signed in\r\n                    // remove the user details rev id from storage\r\n                    window.localStorage.removeItem(\"utopiasoftware-edpms-app-status\");\r\n                }\r\n\r\n                // flag that the user just completed a sign in for this session\r\n                window.sessionStorage.setItem(\"utopiasoftware-edpms-user-logged-in\", \"yes\");\r\n\r\n                // move user to the main menu page\r\n                await Promise.all([$('ons-splitter').get(0).content.load(\"app-main-template\"),\r\n                    $('#loader-modal').get(0).hide()]);\r\n                // display a toast to the user\r\n                //ons.notification.toast(`<ons-icon icon=\"md-check\" size=\"20px\" style=\"color: #00D5C3\"></ons-icon> Welcome ${serverResponse.firstname}`, {timeout:3000});\r\n            }\r\n            catch(err){\r\n                $('#loader-modal').get(0).hide();\r\n                ons.notification.confirm(err.message, {title: '<span style=\"color: red\">Sign In Failed</span>',\r\n                    buttonLabels: ['OK'], modifier: 'utopiasoftware-alert-dialog'});\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Search Project page\r\n     */\r\n    searchProjectPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.backButtonClicked;\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator =\r\n                    $('#search-project-form').parsley();\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.\r\n                formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidated);\r\n\r\n                try{\r\n                    // keep device awake during the downloading process\r\n                    window.plugins.insomnia.keepAwake();\r\n                    // check if the user just completed a signin or log-in\r\n                    if(window.sessionStorage.getItem(\"utopiasoftware-edpms-user-logged-in\") === \"yes\") {\r\n                        // beginning uploading app data\r\n                        $('#determinate-progress-modal .modal-message').html('Downloading projects data for offline use...');\r\n                        $('#determinate-progress-modal').get(0).show();\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 30;\r\n\r\n                        // get the projects data to be cached\r\n                        let serverResponse = await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/mobile/loadprojects.php\",\r\n                                type: \"post\",\r\n                                contentType: \"application/x-www-form-urlencoded\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"X-PTRACKER-APP\", \"mobile\");\r\n                                },\r\n                                dataType: \"text\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: true,\r\n                                data: {}\r\n                            }\r\n                        ));\r\n\r\n                        serverResponse = JSON.parse(serverResponse); // convert the response to JSON object\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 35;\r\n\r\n                        // delete all previous project data/docs\r\n                        let allProjects = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                            selector: {\r\n                                \"TYPE\": {\r\n                                    \"$eq\": \"projects\"\r\n                                }},\r\n                            fields: [\"_id\", \"_rev\", \"PROJECTID\", \"TITLE\", \"CONTRACTSUM\", \"CONTRACTOR\", \"MDAID\", \"TYPE\"],\r\n                            use_index: [\"ptracker-index-designdoc\", \"DOC_TYPE_INDEX\"]\r\n                        });\r\n\r\n                        // get all the returned projects and delete them\r\n                        allProjects = allProjects.docs.map((currentValue, index, array) => {\r\n                            currentValue._deleted = true; // mark the document as deleted\r\n                            return currentValue;\r\n                        });\r\n\r\n                        // check if there are any project data to delete\r\n                        if(allProjects.length > 0){\r\n                            // delete the already saved projects\r\n                            await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(allProjects);\r\n                        }\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 45;\r\n\r\n                        // store the all the project data received\r\n                        await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(serverResponse);\r\n                        // inform the user that milestone data is being downloaded for offline use\r\n                        $('#determinate-progress-modal .modal-message').html('Downloading milestones data for offline use...');\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 50;\r\n\r\n                        // get the milestones data to be cached\r\n                        serverResponse = await Promise.resolve($.ajax(\r\n                            {\r\n                                url: utopiasoftware[utopiasoftware_app_namespace].model.appBaseUrl + \"/mobile/loadboq.php\",\r\n                                type: \"post\",\r\n                                contentType: \"application/x-www-form-urlencoded\",\r\n                                beforeSend: function(jqxhr) {\r\n                                    jqxhr.setRequestHeader(\"X-PTRACKER-APP\", \"mobile\");\r\n                                },\r\n                                dataType: \"text\",\r\n                                timeout: 240000, // wait for 4 minutes before timeout of request\r\n                                processData: true,\r\n                                data: {}\r\n                            }\r\n                        ));\r\n\r\n                        serverResponse = JSON.parse(serverResponse); // convert the response to JSON object\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 75;\r\n\r\n                        // delete all previous milestones /docs\r\n                        allProjects = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                            selector: {\r\n                                \"TYPE\": {\r\n                                    \"$eq\": \"BOQ\"\r\n                                }},\r\n                            fields: [\"_id\", \"_rev\", \"CATEGORY\", \"AMOUNT\", \"RATE\", \"PROJECTID\", \"DDATE\", \"BOQID\", \"TYPE\"],\r\n                            use_index: [\"ptracker-index-designdoc\", \"DOC_TYPE_INDEX\"]\r\n                        });\r\n\r\n                        // get all the returned milestones and delete them\r\n                        allProjects = allProjects.docs.map((currentValue, index, array) => {\r\n                            currentValue._deleted = true; // mark the document as deleted\r\n                            return currentValue;\r\n                        });\r\n\r\n                        // check if there are any milestone data to delete\r\n                        if(allProjects.length > 0){\r\n                            // delete the already saved milestone data\r\n                            await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(allProjects);\r\n                        }\r\n\r\n                        $('#determinate-progress-modal #determinate-progress').get(0).value = 100;\r\n\r\n                        // store the all the milestone data received\r\n                        await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.bulkDocs(serverResponse);\r\n                    }\r\n\r\n                    // check if the user just completed a signin or log-in\r\n                    if(window.sessionStorage.getItem(\"utopiasoftware-edpms-user-logged-in\") !== \"yes\") { // user did NOT just log in / sign in\r\n                        // get the userDetails data from the app database\r\n                        utopiasoftware[utopiasoftware_app_namespace].model.userDetails =\r\n                            (await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.get(\"userDetails\"));\r\n                    }\r\n\r\n                    // hide the progress loader\r\n                    await Promise.all([$('#determinate-progress-modal').get(0).hide(),\r\n                        $('#loader-modal').get(0).hide()]);\r\n                    // display a toast to the user\r\n                    ons.notification.toast(`<ons-icon icon=\"md-check\" size=\"20px\" style=\"color: #00D5C3\"></ons-icon> Welcome ${utopiasoftware[utopiasoftware_app_namespace].model.userDetails.userDetails.firstname}`, {timeout:3000});\r\n                }\r\n                catch(err){\r\n                    console.log(err);\r\n                    $('#determinate-progress-modal').get(0).hide();\r\n                    $('#loader-modal').get(0).hide();\r\n                }\r\n                finally {\r\n                    window.plugins.insomnia.allowSleepAgain(); // the device can go to sleep now\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the \"Project Search\" button is clicked\r\n         *\r\n         * @returns {Promise<void>}\r\n         */\r\n        async searchButtonClicked(keyEvent){\r\n\r\n            // check which key was pressed\r\n            if(keyEvent.which === kendo.keys.ENTER) // if the enter key was pressed\r\n            {\r\n                // run the validation method for the project search form\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.searchProjectPageViewModel.formValidator.whenValidate();\r\n                keyEvent.preventDefault();\r\n                keyEvent.stopImmediatePropagation();\r\n                keyEvent.stopPropagation();\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the project search search/find form is successfully validated\r\n         * @returns {Promise<void>}\r\n         */\r\n        async formValidated(){\r\n            // show the page preloader\r\n            $('#search-project-page .page-preloader').css(\"display\", \"block\");\r\n            // hide the previous project details being displayed\r\n            $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n            // hide all previous error messages (if any)\r\n            $('#search-project-page .no-project-found').css(\"display\", \"none\");\r\n            // hide the device keyboard\r\n            Keyboard.hide();\r\n\r\n            try{\r\n\r\n                // search the app database for the project id provided\r\n                let dbQueryResult = await utopiasoftware[utopiasoftware_app_namespace].model.appDatabase.find({\r\n                    selector: {\r\n                        \"PROJECTID\": {\r\n                            \"$eq\": $('#search-project-page #search-project-search-input').get(0).value.trim().toLocaleUpperCase()\r\n                        }},\r\n                    fields: [\"_id\", \"_rev\", \"PROJECTID\", \"TITLE\", \"CONTRACTSUM\", \"CONTRACTOR\", \"MDAID\", \"TYPE\"],\r\n                    use_index: [\"ptracker-index-designdoc\", \"FIND_PROJECT_BY_ID_INDEX\"]\r\n                });\r\n\r\n                // check that the requested project was found\r\n                if(dbQueryResult.docs.length == 0){ // search project was NOT FOUND\r\n                    // hide the page preloader\r\n                    $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n                    // inform user that no project was found\r\n                    $('#search-project-page .no-project-found').css(\"display\", \"block\");\r\n                    // hide the previous project details being displayed\r\n                    $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n                    return; // exit the method here\r\n                }\r\n\r\n                // if the method gets to this point, it means a project was found\r\n                // create the searched project details to be displayed\r\n                let searchedProjectDetails = `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Project ID</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: uppercase; padding: 1rem;\">${dbQueryResult.docs[0].PROJECTID}</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Title</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: capitalize; padding: 1rem;\">${dbQueryResult.docs[0].TITLE}</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Contractor</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: capitalize; padding: 1rem;\">${dbQueryResult.docs[0].CONTRACTOR}</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"font-weight: bold; color: #000000; padding: 1rem;\">Contract Sum</div>`;\r\n                searchedProjectDetails += `<div class=\"col-xs-6\" style=\"color: #000000; text-transform: capitalize; padding: 1rem;\">${kendo.toString(kendo.parseFloat(dbQueryResult.docs[0].CONTRACTSUM), \"n2\")}</div>`;\r\n\r\n                // attach the generated project details to the page\r\n                $('#search-project-page #search-project-details').html(searchedProjectDetails);\r\n\r\n                // hide the page preloader\r\n                $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n\r\n                // perform actions to reveal result\r\n                kendo.fx($('#search-project-page #search-project-details')).fade(\"in\").duration(550).play();\r\n                await Promise.\r\n                resolve(kendo.fx($('#search-project-page ons-bottom-toolbar')).slideIn(\"up\").duration(600).play());\r\n                $('#search-project-page ons-bottom-toolbar').css(\"display\", \"block\");\r\n            }\r\n            catch(err){\r\n                // hide the page preloader\r\n                $('#search-project-page .page-preloader').css(\"display\", \"none\");\r\n                // inform user that no project was found\r\n                $('#search-project-page .no-project-found').css(\"display\", \"block\");\r\n                // hide the previous project details being displayed\r\n                $('#search-project-page #search-project-details').css(\"display\", \"none\");\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit App',\r\n                buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the 'Proceed' button is clicked\r\n         */\r\n        proceedButtonClicked(){\r\n\r\n            // move to the project evaluation page\r\n            $('#app-main-navigator').get(0).pushPage(\"project-evaluation-page.html\", {animation: \"lift-md\"});\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the Project Evaluation page\r\n     */\r\n    projectEvaluationPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false\r\n                || ! ej){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.projectEvaluationPageViewModel.backButtonClicked;\r\n\r\n                // create the slider elements\r\n                $('#project-evaluation-page .project-evaluation-slider').\r\n                each(function(index, element){\r\n                    let aSlider = new ej.inputs.Slider({\r\n                        min: 0,\r\n                        max: 100,\r\n                        value: 25,\r\n                        step: 1,\r\n                        orientation: 'Horizontal',\r\n                        type: 'MinRange',\r\n                        created: function(){\r\n                            $('.e-handle', element).text(this.value);\r\n                        },\r\n                        change: function(changeEvent){\r\n                            $('.e-handle', element).text(changeEvent.value);\r\n                        }\r\n                    });\r\n                    aSlider.appendTo(element);\r\n                });\r\n\r\n\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            // window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the device back button is clicked OR a similar action is triggered\r\n         */\r\n        backButtonClicked(){\r\n\r\n            // move to the project evaluation page\r\n            $('#app-main-navigator').get(0).popPage();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"project evaluation carousel\" is changed\r\n         * @param event\r\n         */\r\n        carouselChanged(event){\r\n            // change the css display the prev fab button\r\n            $('#project-evaluation-prev-button').css(\"display\", \"inline-block\");\r\n             // check if the carousel is at the last item\r\n            if(event.originalEvent.activeIndex === 2) { // this is the last carousel item, so hide the next slide button\r\n                // hide the next fab button\r\n                $('#project-evaluation-next-button').css(\"transform\", \"scale(0)\");\r\n            }\r\n            else if(event.originalEvent.activeIndex === 0) { // this is the first carousel item, so hide the prev slide button\r\n                // hide the prev fab button\r\n                $('#project-evaluation-prev-button').css(\"transform\", \"scale(0)\");\r\n            }\r\n            else { // this is not the first or last item\r\n                $('#project-evaluation-prev-button,#project-evaluation-next-button').css(\"transform\", \"scale(1)\");\r\n            }\r\n\r\n            // change the milestone number\r\n            $('#project-evaluation-milestone-badge').html(`Milestone ${event.originalEvent.activeIndex + 1}`)\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the \"prev button\" for the carousel is clicked\r\n         */\r\n        prevButtonClicked(){\r\n            $('#project-evaluation-page #project-evaluation-carousel').get(0).prev();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"next button\" for the carousel is clicked\r\n         */\r\n        nextButtonClicked(){\r\n            $('#project-evaluation-page #project-evaluation-carousel').get(0).next();\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\n"]}